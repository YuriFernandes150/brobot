import { IGDBOptions } from '../interface/igdb';
import { AchievementsEndpointResponse, CharacterEndpointResponse, CollectionEndpointResponse, CompanyEndpointResponse, CreditEndpointResponse, ExternalReviewEndpointResponse, ExternalReviewSourceEndpointResponse, FeedEndpointResponse, FranchiseEndpointResponse, GameEndpointResponse, GameEngineEndpointResponse, GameModeEndpointResponse, GameVersionEndpointResponse, GenreEndpointResponse, KeywordEndpointResponse, UserProfileEndpointResponse, PageEndpointResponse, PersonEndpointResponse, PlatformEndpointResponse, PlayerPerspecitveEndpointResponse, PulseEndpointResponse, PulseGroupEndpointResponse, PulseSourceEndpointResponse, ReleaseDateEndpointResponse, ReviewEndpointResponse, ThemeEndpointResponse, TitleEndpointResponse } from '../interface/endpoint-response';
export declare class IGDBEndpoint {
    /**
     * API key received from IGDB.
     */
    API_KEY: string;
    /**
     * URL Helper class
     */
    private IGDBUrl;
    /**
     * Setting up the endpoint instance
     * @param igdb_api_key API key received from IGDB
     */
    constructor(igdb_api_key: string);
    /**
     * Sending the actual request
     * @param endpoint An IGDB endpoint to query
     * @param options An options object to customize the query
     */
    private request;
    /**
     * Return the request as a promise.
     * @param endpoint The endpoint to get the data from
     * @param options An options object for the request
     */
    private asPromise;
    /**
     * Fetch data using ACHIEVEMENTS endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/achievements
     */
    achievements(options: IGDBOptions): Promise<AchievementsEndpointResponse[]>;
    /**
     * Fetch data using CHARACTER endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/character
     */
    character(options: IGDBOptions): Promise<CharacterEndpointResponse[]>;
    /**
     * Fetch data using COLLECTION endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/collection
     */
    collection(options: IGDBOptions): Promise<CollectionEndpointResponse[]>;
    /**
     * Fetch data using COMPANY endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/company
     */
    company(options: IGDBOptions): Promise<CompanyEndpointResponse[]>;
    /**
     * Fetch data using CREDITS endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/credits
     */
    credits(options: IGDBOptions): Promise<CreditEndpointResponse[]>;
    /**
     * Fetch data using ACHIEVEMENTS endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/achievements
     */
    feed(options: IGDBOptions): Promise<FeedEndpointResponse[]>;
    /**
     * Fetch data using EXTERNAL REVIEW endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/external-review
     */
    externalReview(options: IGDBOptions): Promise<ExternalReviewEndpointResponse[]>;
    /**
     * Fetch data using EXTERNAL REVIEW SOURCE endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/external-review-source
     */
    externalReviewSource(options: IGDBOptions): Promise<ExternalReviewSourceEndpointResponse[]>;
    /**
     * Fetch data using FRANCHISE endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/franchise
     */
    franchise(options: IGDBOptions): Promise<FranchiseEndpointResponse[]>;
    /**
     * Fetch data using GAME endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/game
     */
    game(options: IGDBOptions): Promise<GameEndpointResponse[]>;
    /**
     * Fetch data using GAME ENGINE endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/game-engine
     */
    gameEngine(options: IGDBOptions): Promise<GameEngineEndpointResponse[]>;
    /**
     * Fetch data using GAME MODE endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/game-mode
     */
    gameMode(options: IGDBOptions): Promise<GameModeEndpointResponse[]>;
    /**
     * Fetch data using GENRE endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/genre
     */
    genre(options: IGDBOptions): Promise<GenreEndpointResponse[]>;
    /**
     * Fetch data using KEYWORD endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/keyword
     */
    keyword(options: IGDBOptions): Promise<KeywordEndpointResponse[]>;
    /**
     * Fetch data using PAGE endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/page
     */
    page(options: IGDBOptions): Promise<PageEndpointResponse[]>;
    /**
     * Fetch data using PERSON endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/person
     */
    person(options: IGDBOptions): Promise<PersonEndpointResponse[]>;
    /**
     * Fetch data using PLATFORM endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/platform
     */
    platform(options: IGDBOptions): Promise<PlatformEndpointResponse[]>;
    /**
     * Fetch data using PLAYER PERSPECTIVE endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/player-perspective
     */
    playerPerspective(options: IGDBOptions): Promise<PlayerPerspecitveEndpointResponse[]>;
    /**
     * Fetch data using PULSE endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/pulse
     */
    pulse(options: IGDBOptions): Promise<PulseEndpointResponse[]>;
    /**
     * Fetch data using PULSE GROUP endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/pulse-groups
     */
    pulseGroup(options: IGDBOptions): Promise<PulseGroupEndpointResponse[]>;
    /**
     * Fetch data using PULSE SOURCE endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/pulse-source
     */
    pulseSource(options: IGDBOptions): Promise<PulseSourceEndpointResponse[]>;
    /**
     * Fetch data using RELEASE DATE endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/release-date
     */
    releaseDate(options: IGDBOptions): Promise<ReleaseDateEndpointResponse[]>;
    /**
     * Fetch data using REVIEW endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/review
     */
    review(options: IGDBOptions): Promise<ReviewEndpointResponse[]>;
    /**
     * Fetch data using THEME endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/theme
     */
    theme(options: IGDBOptions): Promise<ThemeEndpointResponse[]>;
    /**
     * Fetch data using TITLE endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/title
     */
    title(options: IGDBOptions): Promise<TitleEndpointResponse[]>;
    /**
     * Fetch data using USER PROFILE endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/me
     */
    userProfile(options: IGDBOptions): Promise<UserProfileEndpointResponse[]>;
    /**
     * Fetch data using VERSIONS endpoint
     * @param options An option object to customize the query
     * @link https://igdb.github.io/api/endpoints/version
     */
    gameVersion(options: IGDBOptions): Promise<GameVersionEndpointResponse[]>;
}
